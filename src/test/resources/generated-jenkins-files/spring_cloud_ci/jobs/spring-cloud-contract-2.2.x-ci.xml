<project>
	<actions></actions>
	<description></description>
	<keepDependencies>false</keepDependencies>
	<properties>
		<hudson.model.ParametersDefinitionProperty>
			<parameterDefinitions>
				<hudson.model.StringParameterDefinition>
					<name>BRANCH</name>
					<defaultValue>2.2.x</defaultValue>
					<description>Which branch should be built</description>
				</hudson.model.StringParameterDefinition>
			</parameterDefinitions>
		</hudson.model.ParametersDefinitionProperty>
	</properties>
	<canRoam>true</canRoam>
	<disabled>false</disabled>
	<blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
	<blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
	<triggers>
		<hudson.triggers.TimerTrigger>
			<spec>H H/3 * * *</spec>
		</hudson.triggers.TimerTrigger>
		<com.cloudbees.jenkins.GitHubPushTrigger>
			<spec></spec>
		</com.cloudbees.jenkins.GitHubPushTrigger>
	</triggers>
	<concurrentBuild>false</concurrentBuild>
	<builders>
		<hudson.tasks.Shell>
			<command>#!/bin/bash
				set -o errexit

				echo "Logging to Dockerhub..."
				docker login -p "$DOCKER_HUB_PASSWORD" -u "$DOCKER_HUB_USERNAME"
			</command>
		</hudson.tasks.Shell>
		<hudson.tasks.Shell>
			<command>#!/bin/bash
				rm -rf /opt/jenkins/data/tools/hudson.tasks.Maven_MavenInstallation/maven33/
				rm -rf ~/.m2/repository/org/springframework/boot/spring-boot-loader-tools/
			</command>
		</hudson.tasks.Shell>
		<hudson.tasks.Shell>
			<command>#!/bin/bash -x
				echo "Removes old installed stubs and deploys all projects (except for docs)"
				rm -rf ~/.m2/repository/com/example &amp;&amp; rm -rf ~/.m2/repository/org/springframework/cloud/contract/verifier/stubs/ &amp;&amp; ./mvnw clean deploy -nsu -P
				integration,spring -U $MVN_LOCAL_OPTS -Dmaven.test.redirectTestOutputToFile=true -Dsurefire.runOrder=random
			</command>
		</hudson.tasks.Shell>
		<hudson.tasks.Shell>
			<command>#!/bin/bash -x
				echo "Building Spring Cloud Contract docs"
				./scripts/generateDocs.sh
				./mvnw deploy -Pdocs,spring -pl docs -Dsdkman-java-installation.version=17.0.1-zulu
			</command>
		</hudson.tasks.Shell>
	</builders>
	<publishers>
		<jenkins.plugins.slack.SlackNotifier>
			<startNotification>false</startNotification>
			<notifySuccess>false</notifySuccess>
			<notifyAborted>false</notifyAborted>
			<notifyNotBuilt>false</notifyNotBuilt>
			<notifyUnstable>true</notifyUnstable>
			<notifyFailure>false</notifyFailure>
			<notifyBackToNormal>false</notifyBackToNormal>
			<notifyRepeatedFailure>true</notifyRepeatedFailure>
			<notifyRegression>false</notifyRegression>
			<includeTestSummary>true</includeTestSummary>
			<includeFailedTests>true</includeFailedTests>
			<showCommitList>true</showCommitList>
			<commitInfoChoice>AUTHORS_AND_TITLES</commitInfoChoice>
			<room>spring-cloud-firehose</room>
		</jenkins.plugins.slack.SlackNotifier>
	</publishers>
	<buildWrappers>
		<hudson.plugins.timestamper.TimestamperBuildWrapper></hudson.plugins.timestamper.TimestamperBuildWrapper>
		<hudson.plugins.ansicolor.AnsiColorBuildWrapper>
			<colorMapName>xterm</colorMapName>
		</hudson.plugins.ansicolor.AnsiColorBuildWrapper>
		<com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper></com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper>
		<org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
			<bindings>
				<org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
					<credentialsId>hub.docker.com-springbuildmaster</credentialsId>
					<usernameVariable>DOCKER_HUB_USERNAME</usernameVariable>
					<passwordVariable>DOCKER_HUB_PASSWORD</passwordVariable>
				</org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
				<org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
					<credentialsId>02bd1690-b54f-4c9f-819d-a77cb7a9822c</credentialsId>
					<usernameVariable>REPO_USERNAME</usernameVariable>
					<passwordVariable>REPO_PASSWORD</passwordVariable>
				</org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
				<org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
					<credentialsId>3a20bcaa-d8ad-48e3-901d-9fbc941376ee</credentialsId>
					<usernameVariable>GITHUB_REPO_USERNAME</usernameVariable>
					<passwordVariable>GITHUB_REPO_PASSWORD</passwordVariable>
				</org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
				<org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
					<variable>GRADLE_PUBLISH_KEY</variable>
					<credentialsId>gradle-publish-key</credentialsId>
				</org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
				<org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
					<variable>GRADLE_PUBLISH_SECRET</variable>
					<credentialsId>gradle-publish-secret</credentialsId>
				</org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
				<org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
					<variable>RELEASER_GIT_OAUTH_TOKEN</variable>
					<credentialsId>7b3ebbea-7001-479b-8578-b8c464dab973</credentialsId>
				</org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
			</bindings>
		</org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
		<hudson.plugins.build__timeout.BuildTimeoutWrapper>
			<strategy class='hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy'>
				<timeout>600000</timeout>
			</strategy>
			<operationList>
				<hudson.plugins.build__timeout.operations.FailOperation></hudson.plugins.build__timeout.operations.FailOperation>
				<hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
					<description>Build failed due to timeout after {0} minutes of inactivity</description>
				</hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
			</operationList>
		</hudson.plugins.build__timeout.BuildTimeoutWrapper>
	</buildWrappers>
	<jdk>jdk8</jdk>
	<scm class='hudson.plugins.git.GitSCM'>
		<userRemoteConfigs>
			<hudson.plugins.git.UserRemoteConfig>
				<url>https://github.com/spring-cloud/spring-cloud-contract</url>
			</hudson.plugins.git.UserRemoteConfig>
		</userRemoteConfigs>
		<branches>
			<hudson.plugins.git.BranchSpec>
				<name>$BRANCH</name>
			</hudson.plugins.git.BranchSpec>
		</branches>
		<configVersion>2</configVersion>
		<doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
		<gitTool>Default</gitTool>
		<extensions>
			<hudson.plugins.git.extensions.impl.WipeWorkspace></hudson.plugins.git.extensions.impl.WipeWorkspace>
			<hudson.plugins.git.extensions.impl.LocalBranch>
				<localBranch>**</localBranch>
			</hudson.plugins.git.extensions.impl.LocalBranch>
		</extensions>
	</scm>
</project>
